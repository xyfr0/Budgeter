/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.budgeter.view;

import com.mycompany.budgeter.database.*;
import com.mycompany.budgeter.model.Transaction;
import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LENOVO
 */
public class MyMoneyGUI extends javax.swing.JFrame {

    CRUDRecord crudRecord = new CRUDRecord();

    /**
     * Creates new form MyMoneyGUI
     */
    CardLayout cardLayout;
    CardLayout cardLayout2;
    String selectedDay = "";
    String selectedMonth = "";
    String selectedYear = "";
    double balanceApp = 0;

    public MyMoneyGUI() {
        initComponents();
        cardLayout = (CardLayout) (panelDisplay.getLayout());
        cardLayout2 = (CardLayout) (transactionSplit.getLayout());
        cardLayout.show(panelDisplay, "cardTransaction");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        panelMenu = new javax.swing.JPanel();
        btnTransaction = new javax.swing.JButton();
        btnHistory = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        panelDisplay = new javax.swing.JPanel();
        transactionSplit = new javax.swing.JPanel();
        panelTransaction = new javax.swing.JPanel();
        btnToIncome = new javax.swing.JButton();
        btnToExpense = new javax.swing.JButton();
        incomePanel = new javax.swing.JPanel();
        lblAddIncome = new javax.swing.JLabel();
        txtTimeIncome = new javax.swing.JTextField();
        txtValueIncome = new javax.swing.JTextField();
        txtDetailIncome = new javax.swing.JTextField();
        btnBackIncome = new javax.swing.JButton();
        btnSubmitIncome = new javax.swing.JButton();
        lblTimeIncome = new javax.swing.JLabel();
        lblValueIncome = new javax.swing.JLabel();
        lblDetailIncome = new javax.swing.JLabel();
        cboxMonthIncome = new javax.swing.JComboBox<>();
        cboxDayIncome = new javax.swing.JComboBox<>();
        txtYearIncome = new javax.swing.JTextField();
        lblTimeSelectedIncome = new javax.swing.JLabel();
        lblTimeIncome1 = new javax.swing.JLabel();
        lblTimeIncome2 = new javax.swing.JLabel();
        expensePanel = new javax.swing.JPanel();
        lblAddExpense = new javax.swing.JLabel();
        txtValueExpense = new javax.swing.JTextField();
        txtDetailExpense = new javax.swing.JTextField();
        btnSubmitExpense = new javax.swing.JButton();
        btnBackExpense = new javax.swing.JButton();
        lblValueExpense = new javax.swing.JLabel();
        lblDetailExpense = new javax.swing.JLabel();
        cboxDayExpense = new javax.swing.JComboBox<>();
        cboxMonthExpense = new javax.swing.JComboBox<>();
        txtYearExpense = new javax.swing.JTextField();
        txtTimeExpense = new javax.swing.JTextField();
        lblTimeSelectedExpense = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        historyPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        historyTable = new javax.swing.JTable();
        lblHistoryPanel = new javax.swing.JLabel();
        btnDeleteRow = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(1086, 646));
        jPanel1.setRequestFocusEnabled(false);

        panelMenu.setBackground(new java.awt.Color(250, 250, 234));

        btnTransaction.setBackground(new java.awt.Color(250, 250, 234));
        btnTransaction.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24)); // NOI18N
        btnTransaction.setText("Transaction");
        btnTransaction.setActionCommand("Expense");
        btnTransaction.setBorder(null);
        btnTransaction.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnTransaction.setMaximumSize(new java.awt.Dimension(120, 55));
        btnTransaction.setMinimumSize(new java.awt.Dimension(120, 55));
        btnTransaction.setPreferredSize(new java.awt.Dimension(150, 55));
        btnTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransactionActionPerformed(evt);
            }
        });

        btnHistory.setBackground(new java.awt.Color(250, 250, 234));
        btnHistory.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24)); // NOI18N
        btnHistory.setBorder(null);
        btnHistory.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnHistory.setLabel("History");
        btnHistory.setMaximumSize(new java.awt.Dimension(120, 55));
        btnHistory.setMinimumSize(new java.awt.Dimension(120, 55));
        btnHistory.setPreferredSize(new java.awt.Dimension(150, 55));
        btnHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistoryActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Cooper Black", 0, 24)); // NOI18N
        jLabel1.setText("My Money");

        javax.swing.GroupLayout panelMenuLayout = new javax.swing.GroupLayout(panelMenu);
        panelMenu.setLayout(panelMenuLayout);
        panelMenuLayout.setHorizontalGroup(
            panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMenuLayout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnTransaction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21))
        );

        panelMenuLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnHistory, btnTransaction});

        panelMenuLayout.setVerticalGroup(
            panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMenuLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(btnTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnHistory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(431, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(panelMenu);

        panelDisplay.setBackground(new java.awt.Color(255, 255, 239));
        panelDisplay.setPreferredSize(new java.awt.Dimension(881, 685));
        panelDisplay.setLayout(new java.awt.CardLayout());

        transactionSplit.setLayout(new java.awt.CardLayout());

        panelTransaction.setBackground(new java.awt.Color(243, 243, 231));

        btnToIncome.setBackground(new java.awt.Color(250, 250, 234));
        btnToIncome.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24)); // NOI18N
        btnToIncome.setText("Income");
        btnToIncome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToIncomeActionPerformed(evt);
            }
        });

        btnToExpense.setBackground(new java.awt.Color(250, 250, 234));
        btnToExpense.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24)); // NOI18N
        btnToExpense.setText("Expense");
        btnToExpense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToExpenseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTransactionLayout = new javax.swing.GroupLayout(panelTransaction);
        panelTransaction.setLayout(panelTransactionLayout);
        panelTransactionLayout.setHorizontalGroup(
            panelTransactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTransactionLayout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addGroup(panelTransactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnToIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnToExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(173, 173, 173))
        );
        panelTransactionLayout.setVerticalGroup(
            panelTransactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTransactionLayout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(btnToIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92)
                .addComponent(btnToExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(151, Short.MAX_VALUE))
        );

        transactionSplit.add(panelTransaction, "cardTransBase");
        panelTransaction.getAccessibleContext().setAccessibleParent(panelDisplay);

        incomePanel.setBackground(new java.awt.Color(243, 243, 231));
        incomePanel.setPreferredSize(new java.awt.Dimension(881, 685));

        lblAddIncome.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 26)); // NOI18N
        lblAddIncome.setText("Add Income");

        txtTimeIncome.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        txtTimeIncome.setText(String.format("%s/%s/%s", LocalDateTime.now().getDayOfMonth(), LocalDateTime.now().getMonthValue(), LocalDateTime.now().getYear())
        );
        txtTimeIncome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimeIncomeActionPerformed(evt);
            }
        });

        txtValueIncome.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        txtValueIncome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValueIncomeActionPerformed(evt);
            }
        });

        txtDetailIncome.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        txtDetailIncome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDetailIncomeActionPerformed(evt);
            }
        });

        btnBackIncome.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N
        btnBackIncome.setText("Back");
        btnBackIncome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackIncomeActionPerformed(evt);
            }
        });

        btnSubmitIncome.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N
        btnSubmitIncome.setText("Submit");
        btnSubmitIncome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitIncomeActionPerformed(evt);
            }
        });

        lblTimeIncome.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        lblTimeIncome.setText("Year");

        lblValueIncome.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        lblValueIncome.setText("Value Income");

        lblDetailIncome.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        lblDetailIncome.setText("Detail Income");

        cboxMonthIncome.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N
        cboxMonthIncome.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        cboxMonthIncome.setSelectedIndex(LocalDateTime.now().getMonthValue()-1);
        cboxMonthIncome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxMonthIncomeActionPerformed(evt);
            }
        });

        cboxDayIncome.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N
        cboxDayIncome.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        cboxDayIncome.setSelectedIndex(LocalDateTime.now().getDayOfMonth()-1);
        cboxDayIncome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxDayIncomeActionPerformed(evt);
            }
        });

        txtYearIncome.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        txtYearIncome.setText(String.format("%s", LocalDateTime.now().getYear()));
        txtYearIncome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtYearIncomeActionPerformed(evt);
            }
        });

        lblTimeSelectedIncome.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        lblTimeSelectedIncome.setText("Time Selected");

        lblTimeIncome1.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        lblTimeIncome1.setText("Date");

        lblTimeIncome2.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        lblTimeIncome2.setText("Month");
        lblTimeIncome2.setMaximumSize(new java.awt.Dimension(41, 24));
        lblTimeIncome2.setMinimumSize(new java.awt.Dimension(41, 24));

        javax.swing.GroupLayout incomePanelLayout = new javax.swing.GroupLayout(incomePanel);
        incomePanel.setLayout(incomePanelLayout);
        incomePanelLayout.setHorizontalGroup(
            incomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(incomePanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(incomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(incomePanelLayout.createSequentialGroup()
                        .addComponent(btnSubmitIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBackIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67))
                    .addGroup(incomePanelLayout.createSequentialGroup()
                        .addGroup(incomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblValueIncome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDetailIncome)
                            .addComponent(txtValueIncome)
                            .addGroup(incomePanelLayout.createSequentialGroup()
                                .addGroup(incomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDetailIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblAddIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(169, 169, 169))
                            .addGroup(incomePanelLayout.createSequentialGroup()
                                .addGroup(incomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cboxDayIncome, 0, 80, Short.MAX_VALUE)
                                    .addComponent(lblTimeIncome1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(incomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cboxMonthIncome, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblTimeIncome2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                .addGroup(incomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtYearIncome, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                                    .addComponent(lblTimeIncome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                                .addGroup(incomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtTimeIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTimeSelectedIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)))
                        .addGap(0, 188, Short.MAX_VALUE))))
        );

        incomePanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cboxDayIncome, cboxMonthIncome});

        incomePanelLayout.setVerticalGroup(
            incomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(incomePanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lblAddIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(incomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTimeIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimeIncome1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimeSelectedIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimeIncome2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(incomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboxMonthIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboxDayIncome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimeIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtYearIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblValueIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtValueIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDetailIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDetailIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(173, 173, 173)
                .addGroup(incomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBackIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSubmitIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77))
        );

        incomePanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cboxDayIncome, cboxMonthIncome, txtTimeIncome, txtYearIncome});

        txtTimeIncome.getAccessibleContext().setAccessibleName("");
        txtValueIncome.getAccessibleContext().setAccessibleName("");
        txtDetailIncome.getAccessibleContext().setAccessibleName("");

        transactionSplit.add(incomePanel, "cardIncome");

        expensePanel.setBackground(new java.awt.Color(243, 243, 231));
        expensePanel.setPreferredSize(new java.awt.Dimension(881, 685));

        lblAddExpense.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 26)); // NOI18N
        lblAddExpense.setText("Add Expense");

        txtValueExpense.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        txtValueExpense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValueExpenseActionPerformed(evt);
            }
        });

        txtDetailExpense.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        txtDetailExpense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDetailExpenseActionPerformed(evt);
            }
        });

        btnSubmitExpense.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N
        btnSubmitExpense.setText("Submit");
        btnSubmitExpense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitExpenseActionPerformed(evt);
            }
        });

        btnBackExpense.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N
        btnBackExpense.setText("Back");
        btnBackExpense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackExpenseActionPerformed(evt);
            }
        });

        lblValueExpense.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        lblValueExpense.setText("Value Expense");

        lblDetailExpense.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        lblDetailExpense.setText("Detail Expense");

        cboxDayExpense.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N
        cboxDayExpense.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        cboxDayExpense.setSelectedIndex(LocalDateTime.now().getDayOfMonth() - 1);
        cboxDayExpense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxDayExpenseActionPerformed(evt);
            }
        });

        cboxMonthExpense.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N
        cboxMonthExpense.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));
        cboxMonthExpense.setSelectedIndex(LocalDateTime.now().getMonthValue() - 1);
        cboxMonthExpense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxMonthExpenseActionPerformed(evt);
            }
        });

        txtYearExpense.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        txtYearExpense.setText(String.format("%s", LocalDateTime.now().getYear()));
        txtYearExpense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtYearExpenseActionPerformed(evt);
            }
        });

        txtTimeExpense.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        txtTimeExpense.setText(String.format("%s/%s/%s", LocalDateTime.now().getDayOfMonth(), LocalDateTime.now().getMonthValue(), LocalDateTime.now().getYear())
        );
        txtTimeExpense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimeExpenseActionPerformed(evt);
            }
        });

        lblTimeSelectedExpense.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        lblTimeSelectedExpense.setText("Time Selected");

        jLabel2.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        jLabel2.setText("Day");

        jLabel3.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        jLabel3.setText("Month");

        jLabel4.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        jLabel4.setText("Year");

        javax.swing.GroupLayout expensePanelLayout = new javax.swing.GroupLayout(expensePanel);
        expensePanel.setLayout(expensePanelLayout);
        expensePanelLayout.setHorizontalGroup(
            expensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(expensePanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(expensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(expensePanelLayout.createSequentialGroup()
                        .addComponent(btnSubmitExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(451, 451, 451)
                        .addComponent(btnBackExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblAddExpense, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDetailExpense, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDetailExpense, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtValueExpense, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(expensePanelLayout.createSequentialGroup()
                        .addGroup(expensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboxDayExpense, 0, 80, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(expensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboxMonthExpense, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(expensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtYearExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(expensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTimeSelectedExpense, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTimeExpense, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblValueExpense, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 155, Short.MAX_VALUE))
        );

        expensePanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cboxDayExpense, cboxMonthExpense});

        expensePanelLayout.setVerticalGroup(
            expensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(expensePanelLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(lblAddExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(expensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, expensePanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTimeSelectedExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(expensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTimeExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(expensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cboxDayExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cboxMonthExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(expensePanelLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(expensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtYearExpense, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(expensePanelLayout.createSequentialGroup()
                                .addGroup(expensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(expensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2)))
                                .addGap(38, 38, 38)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblValueExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(txtValueExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDetailExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDetailExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(191, 191, 191)
                .addGroup(expensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmitExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBackExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77))
        );

        expensePanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cboxDayExpense, cboxMonthExpense, txtTimeExpense, txtYearExpense});

        transactionSplit.add(expensePanel, "cardExpense");

        panelDisplay.add(transactionSplit, "cardTransaction");
        transactionSplit.getAccessibleContext().setAccessibleParent(panelDisplay);

        historyPanel.setBackground(new java.awt.Color(243, 243, 231));

        historyTable.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        historyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Date", "TransactionType", "Amount", "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        historyTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(historyTable);
        if (historyTable.getColumnModel().getColumnCount() > 0) {
            historyTable.getColumnModel().getColumn(0).setResizable(false);
            historyTable.getColumnModel().getColumn(1).setResizable(false);
            historyTable.getColumnModel().getColumn(2).setResizable(false);
            historyTable.getColumnModel().getColumn(3).setResizable(false);
        }

        lblHistoryPanel.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 30)); // NOI18N
        lblHistoryPanel.setText("All History");

        btnDeleteRow.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 28)); // NOI18N
        btnDeleteRow.setText(" Delete Row");
        btnDeleteRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRowActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout historyPanelLayout = new javax.swing.GroupLayout(historyPanel);
        historyPanel.setLayout(historyPanelLayout);
        historyPanelLayout.setHorizontalGroup(
            historyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(historyPanelLayout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addGroup(historyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, historyPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnDeleteRow))
                    .addGroup(historyPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 71, Short.MAX_VALUE)))
                .addGap(71, 71, 71))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, historyPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblHistoryPanel)
                .addGap(370, 370, 370))
        );
        historyPanelLayout.setVerticalGroup(
            historyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, historyPanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(lblHistoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteRow, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
        );

        panelDisplay.add(historyPanel, "cardHistory");

        jSplitPane1.setRightComponent(panelDisplay);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistoryActionPerformed
        // TODO add your handling code here:         
        cardLayout.show(panelDisplay, "cardHistory");
        DefaultTableModel dtm = (DefaultTableModel) historyTable.getModel();
        dtm.getDataVector().removeAllElements();
        crudRecord.readTable();
    }//GEN-LAST:event_btnHistoryActionPerformed

    private void btnTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransactionActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) historyTable.getModel();
        dtm.getDataVector().removeAllElements();
        cardLayout.show(panelDisplay, "cardTransaction");
    }//GEN-LAST:event_btnTransactionActionPerformed

    private void txtDetailExpenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDetailExpenseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDetailExpenseActionPerformed

    private void txtValueIncomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValueIncomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValueIncomeActionPerformed

    private void txtDetailIncomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDetailIncomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDetailIncomeActionPerformed

    private void btnToIncomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToIncomeActionPerformed
        // TODO add your handling code here:
        cardLayout2.show(transactionSplit, "cardIncome");
    }//GEN-LAST:event_btnToIncomeActionPerformed

    private void btnBackIncomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackIncomeActionPerformed
        // TODO add your handling code here:
        selectedDay = "";
        selectedMonth = "";
        selectedYear = "";
        cardLayout2.show(transactionSplit, "cardTransBase");
    }//GEN-LAST:event_btnBackIncomeActionPerformed

    private void btnSubmitExpenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitExpenseActionPerformed
        // TODO add your handling code here:
        if (txtValueExpense.getText().equals("") || txtTimeExpense.getText().equals("") || txtDetailExpense.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Pastikan masukkan seluruh data");
        } else {
            try {
                SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
                Date dateExpense = formatter.parse(txtTimeExpense.getText());
                double amountExpense = Double.parseDouble(txtValueExpense.getText());
                Transaction transaction = new Transaction(1, amountExpense, dateExpense, "Expense", txtDetailExpense.getText());

                crudRecord.insertTransaction(transaction);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Value must be a number !");
            } catch (ParseException  ex) {
                Logger.getLogger(MyMoneyGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(this, "Data Added!");
            txtDetailExpense.setText("");
            txtTimeExpense.setText("");
            txtValueExpense.setText("");
            cboxDayExpense.setSelectedIndex(LocalDateTime.now().getDayOfMonth() - 1);
            cboxMonthExpense.setSelectedIndex(LocalDateTime.now().getMonthValue() - 1);
            txtYearExpense.setText(String.format("%s", LocalDateTime.now().getYear()));
            selectedDay = "";
            selectedMonth = "";
            selectedYear = "";
        }
    }//GEN-LAST:event_btnSubmitExpenseActionPerformed

    private void btnToExpenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToExpenseActionPerformed
        // TODO add your handling code here:
        cardLayout2.show(transactionSplit, "cardExpense");
    }//GEN-LAST:event_btnToExpenseActionPerformed

    private void btnBackExpenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackExpenseActionPerformed
        // TODO add your handling code here:
        selectedDay = "";
        selectedMonth = "";
        selectedYear = "";
        cardLayout2.show(transactionSplit, "cardTransBase");
    }//GEN-LAST:event_btnBackExpenseActionPerformed

    private void btnSubmitIncomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitIncomeActionPerformed
        // TODO add your handling code here:        
        if (txtTimeIncome.getText().equals("") || txtValueIncome.getText().equals("") || txtDetailIncome.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Pastikan masukkan seluruh data");
        } else {
            try {
                SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
                Date dateIncome = formatter.parse(txtTimeIncome.getText());
                double amountIncome = Double.parseDouble(txtValueIncome.getText());
                Transaction transaction = new Transaction(1, amountIncome, dateIncome, "Income", txtDetailIncome.getText());
                crudRecord.insertTransaction(transaction);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Value must be a number !");
            } catch (ParseException ex) {
                Logger.getLogger(MyMoneyGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(this, "Data Added!");
            txtDetailIncome.setText("");
            txtTimeIncome.setText("");
            txtValueIncome.setText("");
            cboxDayIncome.setSelectedIndex(LocalDateTime.now().getDayOfMonth() - 1);
            cboxMonthIncome.setSelectedIndex(LocalDateTime.now().getMonthValue() - 1);
            txtYearIncome.setText(String.format("%s", LocalDateTime.now().getYear()));
            selectedDay = "";
            selectedMonth = "";
            selectedYear = "";
        }
    }//GEN-LAST:event_btnSubmitIncomeActionPerformed

    private void btnDeleteRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRowActionPerformed
        // TODO add your handling code here:
        DefaultTableModel historyAll = (DefaultTableModel) historyTable.getModel();

        if (historyTable.getSelectedRowCount() == 1) {
            int trID = (int) historyTable.getValueAt(historyTable.getSelectedRow(), 0);
            crudRecord.deleteTransaction(trID);
            historyAll.removeRow(historyTable.getSelectedRow());
            JOptionPane.showMessageDialog(this, "Data deleted!");
        } else {
            if (historyTable.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Table is Empty");
            } else {
                JOptionPane.showMessageDialog(this, "Please select row");
            }
        }
    }//GEN-LAST:event_btnDeleteRowActionPerformed

    private void txtValueExpenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValueExpenseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValueExpenseActionPerformed
    private void showTxtIncome(String selectedDay, String selectedMonth, String selectedYear) {
        txtTimeIncome.setText(selectedDay + "/" + selectedMonth + "/" + selectedYear);
    }

    private void showTxtExpense(String selectedDay, String selectedMonth, String selectedYear) {
        txtTimeExpense.setText(selectedDay + "/" + selectedMonth + "/" + selectedYear);
    }
    private void cboxMonthIncomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxMonthIncomeActionPerformed
        // TODO add your handling code here:
        selectedMonth = cboxMonthIncome.getSelectedItem().toString();
        showTxtIncome(selectedDay, selectedMonth, selectedYear);
    }//GEN-LAST:event_cboxMonthIncomeActionPerformed

    private void cboxDayIncomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxDayIncomeActionPerformed
        // TODO add your handling code here:
        selectedDay = cboxDayIncome.getSelectedItem().toString();
        showTxtIncome(selectedDay, selectedMonth, selectedYear);
    }//GEN-LAST:event_cboxDayIncomeActionPerformed

    private void txtYearIncomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtYearIncomeActionPerformed
        // TODO add your handling code here:
        txtYearIncome.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                selectedYear = txtYearIncome.getText();
                showTxtIncome(selectedDay, selectedMonth, selectedYear);
            }
        });
    }//GEN-LAST:event_txtYearIncomeActionPerformed

    private void txtTimeIncomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimeIncomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimeIncomeActionPerformed

    private void cboxDayExpenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxDayExpenseActionPerformed
        // TODO add your handling code here:  
        selectedDay = cboxDayExpense.getSelectedItem().toString();
        showTxtExpense(selectedDay, selectedMonth, selectedYear);
    }//GEN-LAST:event_cboxDayExpenseActionPerformed

    private void cboxMonthExpenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxMonthExpenseActionPerformed
        // TODO add your handling code here:  
        selectedMonth = cboxMonthExpense.getSelectedItem().toString();
        showTxtExpense(selectedDay, selectedMonth, selectedYear);
    }//GEN-LAST:event_cboxMonthExpenseActionPerformed

    private void txtYearExpenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtYearExpenseActionPerformed
        // TODO add your handling code here:
        txtYearExpense.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                selectedYear = txtYearExpense.getText();
                showTxtExpense(selectedDay, selectedMonth, selectedYear);
            }
        });
    }//GEN-LAST:event_txtYearExpenseActionPerformed

    private void txtTimeExpenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimeExpenseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimeExpenseActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackExpense;
    private javax.swing.JButton btnBackIncome;
    private javax.swing.JButton btnDeleteRow;
    public javax.swing.JButton btnHistory;
    private javax.swing.JButton btnSubmitExpense;
    private javax.swing.JButton btnSubmitIncome;
    private javax.swing.JButton btnToExpense;
    private javax.swing.JButton btnToIncome;
    public javax.swing.JButton btnTransaction;
    private javax.swing.JComboBox<String> cboxDayExpense;
    private javax.swing.JComboBox<String> cboxDayIncome;
    private javax.swing.JComboBox<String> cboxMonthExpense;
    private javax.swing.JComboBox<String> cboxMonthIncome;
    private javax.swing.JPanel expensePanel;
    private javax.swing.JPanel historyPanel;
    private static javax.swing.JTable historyTable;
    private javax.swing.JPanel incomePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel lblAddExpense;
    private javax.swing.JLabel lblAddIncome;
    private javax.swing.JLabel lblDetailExpense;
    private javax.swing.JLabel lblDetailIncome;
    private javax.swing.JLabel lblHistoryPanel;
    private javax.swing.JLabel lblTimeIncome;
    private javax.swing.JLabel lblTimeIncome1;
    private javax.swing.JLabel lblTimeIncome2;
    private javax.swing.JLabel lblTimeSelectedExpense;
    private javax.swing.JLabel lblTimeSelectedIncome;
    private javax.swing.JLabel lblValueExpense;
    private javax.swing.JLabel lblValueIncome;
    public javax.swing.JPanel panelDisplay;
    private javax.swing.JPanel panelMenu;
    private javax.swing.JPanel panelTransaction;
    private javax.swing.JPanel transactionSplit;
    private javax.swing.JTextField txtDetailExpense;
    private javax.swing.JTextField txtDetailIncome;
    private javax.swing.JTextField txtTimeExpense;
    private javax.swing.JTextField txtTimeIncome;
    private javax.swing.JTextField txtValueExpense;
    private javax.swing.JTextField txtValueIncome;
    private javax.swing.JTextField txtYearExpense;
    private javax.swing.JTextField txtYearIncome;
    // End of variables declaration//GEN-END:variables

    public static JTable getHistoryTable() {
        return historyTable;
    }
}
